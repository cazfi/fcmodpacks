; Use the command "rulesetdir ancients" in the server to have freeciv
; use this file.

[datafile]
description = "Ancients governments data for Freeciv"
options = "+Freeciv-ruleset-3.3-Devel-2023.Feb.24"
format_version = 40

[governments]
during_revolution = "Anarchy"

; /* <-- avoid gettext warnings
;
; Below: The individual government types, one per section.
;
; The actual tag used (the * in [government_*]) does not matter, except
; it must be unique within this file, and it may be used in debug
; output when reading this file.
;
; For the "official" rulesets, the order of these sections should not
; be changed because that would break backward compatibility with
; savegames. (In particular, if Fundamentalism is added to default
; ruleset, should be added at end.)
;
; Notes on fields:
;
; name         = translatable name as seen by user
; rule_name    = (optional) internal name for savegames, rulesets etc; if
;                not present, "name" is used for this purpose too. Since
;                the name used in savegames must not change, if you want
;                to rename an item after a ruleset has been released, you
;                should set "rule_name" to the original value of "name".
; reqs         = requirements for this government (see README.effects)
; graphic      = tag specifying preferred graphic
; graphic_alt  = alternate graphics tag if preferred is not found;
;                should be a standard tag if preferred is not;
;                otherwise may be "-"
; sound        = Sound tag for the audio to play when player switch
;                to government.
; sound_alt    = Alternative sound tag, in case primary one is not found.
; sound_alt2   = Second alternative sound tag, in case neither primary tag
;                nor the first alt tag is found.
; ai_better    = AI will not consider this government for use if the
;                government listed here is available
; ruler_male_title   = The default male ruler title for the government type.
;                      It's a format string where name of the ruler is marked
;                      by '%s'.
;                      Individual nations may override this by their
;                      own title.
; ruler_female_title = The default female ruler title for the government type.
;                      See above ruler_male_title.
; helptext     = optional help text string; should escape all raw newlines
;                so that xgettext parsing works
;
; */ <-- avoid gettext warnings

;------------------------------------------------------------------------
[government_anarchy]

name        = _("Anarchy")
; No reqs
graphic     = "gov.anarchy"
graphic_alt = "-"
sound       = "g_anarchy"
sound_alt   = "-"
sound_alt2  = "-"

ruler_male_title = _("Usurper %s")
ruler_female_title = _("?female:Usurper %s")

helptext = _("\
Anarchy is simply the absence of any recognizable government.\
 Citizens are disorganized and unproductive, and will spend all\
 income as quickly as possible, rather than paying taxes or\
 conducting research.\
\n\n\
Anarchy offers slightly less corruption than Despotism,\
 but slightly more unhappiness.\
")

;------------------------------------------------------------------------
[government_despotism]

name        = _("Despotism")
; No reqs
graphic     = "gov.despotism"
graphic_alt = "-"
sound       = "g_despotism"
sound_alt   = "g_generic"
sound_alt2  = "-"
ai_better   = "Petty Monarchy"

ruler_male_title = _("Lord %s")
ruler_female_title = _("Lady %s")

helptext = _("\
Under Despotism, you are the absolute ruler of your people.  Your\
 control over your citizens is maintained largely by martial law.\
\n\n\
Despotism suffers the highest level of corruption of all\
 forms of government.\
")

;------------------------------------------------------------------------
[government_petty_monarchy]

name        = _("Petty Monarchy")
reqs = { "type", "name", "range"
         "tech", "Monarchy", "Player"
       }
graphic     = "gov.monarchy"
graphic_alt = "-"
sound       = "g_monarchy"
sound_alt   = "g_generic"
sound_alt2  = "-"
ai_better   = "Imperial Monarchy"

ruler_male_title = _("King %s")
ruler_female_title = _("Queen %s")

helptext = _("\
Under a Petty Monarchy, a king or queen serves as a hereditary ruler\
 for your government.\
\n\n\
A Petty Monarchy has corruption rates similar to a Republic in cities near\
 the capital. However, corruption is rife in outlying provinces, so the\
 Petty Monarchy is not able to manage large kingdoms well.\
")

;------------------------------------------------------------------------
[government_imperial_monarchy]

name        = _("Imperial Monarchy")
reqs = { "type", "name", "range"
         "tech", "Diplomacy", "Player"
       }
graphic     = "gov.monarchy"
graphic_alt = "-"
sound       = "g_monarchy"
sound_alt   = "g_generic"
sound_alt2  = "-"
ai_better   = "Principate"

ruler_male_title = _("Emperor %s")
ruler_female_title = _("Empress %s")

helptext = _("\
Under an Imperial Monarchy, a emperor or empress serves as a hereditary ruler\
 for your nation. Unlike the Petty Monarchy, an efficient bureaucracy\
  allows management of a vast empire.\
\n\n\
An Imperial Monarchy suffers the same small amount of corruption that the\
 Republic does. This corruption does not increase with distance from the\
 capital\
")

;------------------------------------------------------------------------
[government_republic]

name        = _("Republic")
reqs = { "type", "name", "range"
         "tech", "Republic", "Player"
       }
graphic     = "gov.republic"
graphic_alt = "-"
sound       = "g_republic"
sound_alt   = "g_generic"
sound_alt2  = "-"
ai_better   = "Principate"

ruler_male_title = _("Consul %s")
ruler_female_title = _("Consul %s")

helptext = _("\
Under a Republican government, citizens hold elections to select\
 representatives who will govern them; since elected leaders must\
 remain popular to remain in control, citizens are given a greater\
 degree of freedom.  Citizens under the Republic become unhappy\
 easily, but the self-sufficiency of your citizens allows high levels\
 of trade.\
\n\n\
A Republic is not suitable for managing a large empire. If your Republic\
 grows large you should consider changing to a Principate or an\
 Imperial Monarchy.\
\n\n\
Cities under the Republic suffer a small amount of corruption.\
")

;------------------------------------------------------------------------
[government_principate]

name        = _("Principate")
reqs = { "type", "name", "range"
         "tech", "Principate", "Player"
       }
graphic     = "gov.republic"
graphic_alt = "-"
sound       = "g_republic"
sound_alt   = "g_generic"
sound_alt2  = "-"

ruler_male_title = _("King %s")
ruler_female_title = _("Queen %s")

helptext = _("\
A Principate is essentialy an Imperial Monarchy that retains some of\
 the forms of a Republic. Under a Principate, a Princeps rules with near\
 absolute authority and uses an efficient bureaucracy to manage a\
 vast empire.\
\n\n\
A Principate suffers the same small amount of corruption that the\
 Republic does. This corruption does not increase with distance from the\
 capital\
\n\n\
")

;------------------------------------------------------------------------
[government_ancient_democracy]

name        = _("Ancient Democracy")
reqs = { "type", "name", "range"
         "tech", "Literacy", "Player"
       }
graphic     = "gov.democracy"
graphic_alt = "-"
sound       = "g_democracy"
sound_alt   = "g_generic"
sound_alt2  = "-"

ruler_male_title = _("Prytanis %s")
ruler_female_title = _("Prytanis %s")

helptext = _("\
Under an Ancient Democracy, an assembly of citizens governs directly\
 by voting on issues.\
 An Ancient Democracy offers the highest possible level of trade, but also\
 offers the most potential for unhappiness. Due to the direct participatory\
 nature of an Ancient Democracy, it does not scale up well to large empires.\
 Do not switch to this government type if you already have a large empire!\
")

; /* <-- avoid gettext warnings
;
; Multipliers (aka policies)
;
; name                    = translatable name as seen by user
; rule_name               = (optional) internal name for savegames, rulesets
;                           etc; if not present, "name" is used for this
;                           purpose too. Since the name used in savegames must
;                           not change, if you want to rename an item after a
;                           ruleset has been released, you should set
;                           "rule_name" to the original value of "name".
; default                 = default value (as presented in UI)
; start                   = minimum value (as presented in UI)
; stop                    = maximum value (as presented in UI)
; step                    = minimum increase/decrease (as presented in UI)
; offset                  = offset/factor control how UI values are turned
; factor                  = into effect values for use in effects.ruleset.
;                           effect_value = (ui_value + offset) * (factor/100)
;                           Optional; by default offset=0, factor=100, so
;                           that UI values are used as-is.
; minimum_turns           = how often multiplier can be changed, or: how long one is stuck
;                           with the given value after changing to it
; reqs                    = requirements for adjusting this policy (see README.effects)
; helptext                = optional help text string; should escape all raw
;                           newlines so that xgettext parsing works
;
; */ <-- avoid gettext warnings
